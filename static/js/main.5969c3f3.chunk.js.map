{"version":3,"sources":["components/Container/Container.jsx","components/Section/Section.jsx","components/Statistics/StatisticsItem.jsx","components/Statistics/Total.jsx","components/PositiveFb/PositiveFb.js","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.jsx","reportWebVitals.js","index.js","components/Container/Container.module.css"],"names":["Container","children","className","s","container","Section","title","StatisticsItem","good","neutral","bad","console","log","Total","total","PositiveFb","positivePercentage","Statistics","state","visible","this","props","Component","FeedbackOptions","onLeaveFeedback","type","name","onClick","Notification","count","message","App","handleIncrement","e","target","setState","prevState","countTotalFeedback","reduce","sum","countPositiveFeedbackPercentage","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5969c3f3.chunk.js","sourcesContent":["import s from './Container.module.css'\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>\r\n}\r\n\r\nexport default Container\r\n","const Section = ({ children, title }) => {\r\n  return (\r\n    <section>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Section\r\n","import PropTypes from 'prop-types'\r\n\r\nconst StatisticsItem = ({ good, neutral, bad }) => {\r\n  const s = { good }\r\n  console.log('state', s)\r\n  // const g = { grades }\r\n  // console.log('grades', g)\r\n  return (\r\n    // <>\r\n    //   <li>\r\n    //     <p>{name}:</p>\r\n    //   </li>\r\n    // </>\r\n    <>\r\n      <li>\r\n        <p>\r\n          Goog: <span>{good}</span>\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          Neutral: <span>{neutral}</span>\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          Bad: <span>{bad}</span>\r\n        </p>\r\n      </li>\r\n    </>\r\n  )\r\n}\r\nStatisticsItem.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default StatisticsItem\r\n","import PropTypes from 'prop-types'\r\n\r\nconst Total = ({ total }) => {\r\n  return (\r\n    <>\r\n      <li>\r\n        <p>\r\n          Total: <span>{total}</span>\r\n        </p>\r\n      </li>\r\n    </>\r\n  )\r\n}\r\nTotal.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Total\r\n","import React from 'react'\r\n\r\nconst PositiveFb = ({ positivePercentage }) => {\r\n  return <p>Positive: {positivePercentage}%</p>\r\n}\r\nexport default PositiveFb\r\n","import React, { Component } from 'react'\r\nimport StatisticsItem from './StatisticsItem'\r\nimport Total from './Total'\r\nimport PositiveFb from '../PositiveFb/PositiveFb'\r\n\r\n//==================================\r\n// const Statistics = ({\r\n//   good,\r\n//   neutral,\r\n//   bad,\r\n//   total,\r\n//   positivePercentage\r\n// }) => (\r\n//   <div>\r\n//     <ul>\r\n//       <StatisticsItem good={good} neutral={neutral} bad={bad} />\r\n//       <Total total={total} />\r\n//       <PositiveFb positivePercentage={positivePercentage} />\r\n//     </ul>\r\n//   </div>\r\n// )\r\n//=======================================\r\n\r\nclass Statistics extends Component {\r\n  state = {\r\n    visible: false,\r\n  }\r\n\r\n  // show = () => {\r\n  //   this.setState({ visible: true })\r\n  // }\r\n\r\n  // hide = () => {\r\n  //   this.setState({ visible: false })\r\n  // }\r\n\r\n  render() {\r\n    const { good, neutral, bad, total, positivePercentage } = this.props\r\n\r\n    return (\r\n      <div>\r\n        {total === 0 ? (\r\n          this.state.visible\r\n        ) : (\r\n          <ul>\r\n            <StatisticsItem good={good} neutral={neutral} bad={bad} />\r\n            <Total total={total} />\r\n            <PositiveFb positivePercentage={positivePercentage} />\r\n          </ul>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// class StatisticsList extends Component {\r\n//   state = {\r\n//     good: 0,\r\n//     neutral: 0,\r\n//     bad: 0,\r\n//   }\r\n\r\n//   // handleIncrement = (e) => {\r\n//   //   const name = e.target.name\r\n//   //   // console.log(e)\r\n//   //   // console.log(e.target)\r\n//   //   // console.log(e.target.name)\r\n//   //   this.setState((prevState) => ({\r\n//   //     [name]: prevState.[name] + 1,\r\n//   //   }))\r\n//   // }\r\n\r\n//   render() {\r\n//     const name = grades\r\n//     console.log('name в классе', name)\r\n//     console.log('grades in the class', grades[0])\r\n//     // const s = this.state\r\n//     // console.log(s)\r\n//     // const { good, neutral, bad } = this.state\r\n//     return (\r\n//       <div>\r\n//         {/* <section>\r\n//           <h2>Please leave feedback</h2>\r\n//           <Buttons onIncrement={this.handleIncrement }/>\r\n//         </section> */}\r\n\r\n//         <section>\r\n//           <h2>Statistics</h2>\r\n//           <ul>\r\n//             {/* {this.props.grades.map(({ name }) => (\r\n//               <StatisticsItem\r\n//                 state={this.state}\r\n//                 good={this.state.good}\r\n//                 neutral={this.state.neutral}\r\n//                 bad={this.state.bad}\r\n//                 name={name}\r\n//               />\r\n//             ))} */}\r\n//             <StatisticsItem\r\n//               state={this.state}\r\n//               good={this.state.good}\r\n//               neutral={this.state.neutral}\r\n//               bad={this.state.bad}\r\n//               grades={grades}\r\n//             />\r\n//           </ul>\r\n//         </section>\r\n//       </div>\r\n\r\n//       // <section>\r\n//       //   {this.props.title && <h2>{this.props.title}</h2>}\r\n//       //   <ul>\r\n//       //     {this.props.grades.map(({ name }) => (\r\n//       //       <StatisticsItem />\r\n//       //     ))}\r\n//       //   </ul>\r\n//       // </section>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// const StatisticsList = ({ grades, title }) => (\r\n//   <section>\r\n//     {title && <h2>{title}</h2>}\r\n//     <ul>\r\n//       {grades.map((grade) => (\r\n//         <li>\r\n//           <StatisticsItem grade={grade.name} />\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   </section>\r\n// )\r\n\r\n// StatisticsList.propTypes = {\r\n//   title: PropTypes.string,\r\n//   grades: PropTypes.array.isRequired,\r\n// }\r\nexport default Statistics\r\n","const FeedbackOptions = ({ title, onLeaveFeedback }) => (\r\n  <div>\r\n    <button type=\"button\" name=\"good\" onClick={onLeaveFeedback}>\r\n      Good\r\n    </button>\r\n    <button type=\"button\" name=\"neutral\" onClick={onLeaveFeedback}>\r\n      Neutral\r\n    </button>\r\n    <button type=\"button\" name=\"bad\" onClick={onLeaveFeedback}>\r\n      Bad\r\n    </button>\r\n  </div>\r\n)\r\n\r\nexport default FeedbackOptions\r\n","import React from 'react'\r\n\r\nfunction Notification({ count, message }) {\r\n  return <div>{count === 0 && message}</div>\r\n}\r\n\r\nexport default Notification\r\n","import { Component } from 'react'\r\nimport Container from './components/Container/Container'\r\nimport Section from './components/Section/Section'\r\nimport Statistics from './components/Statistics/Statistics'\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions'\r\nimport Notification from './components/Notification/Notification'\r\n\r\n// import grades from './data/grades.json'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  }\r\n\r\n  handleIncrement = (e) => {\r\n    const name = e.target.name\r\n    // console.log(e)\r\n    // console.log(e.target)\r\n    // console.log(e.target.name)\r\n    this.setState((prevState) => ({\r\n      [name]: prevState[name] + 1,\r\n    }))\r\n  }\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state\r\n    const sum = [good, neutral, bad]\r\n    return sum.reduce((total, sum) => total + sum, 0)\r\n  }\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state\r\n    // console.log('good внутри PositiveFeedbackPercentage', good)\r\n    const sum = this.countTotalFeedback()\r\n    // console.log('sum внутри PositiveFeedbackPercentage', sum)\r\n    return sum === 0 ? 0 : Math.round((good / sum) * 100)\r\n    // return posPrct.split()\r\n  }\r\n  //.split('.')[0]\r\n\r\n  // countTotalFeedback = (e) => {\r\n  //   console.log(e)\r\n  //   console.log(e.target)\r\n  //   console.log(e.target.name)\r\n  //   const name = e.target.name\r\n  //   this.setState((prevState) => ({\r\n  //     [name]: (prevState[name] += prevState[name]),\r\n  //   }))\r\n  // }\r\n\r\n  // onClick = () => {\r\n  //   return(\r\n  //   handleIncrement()\r\n  //   countTotalFeedback())\r\n  // }\r\n\r\n  render() {\r\n    console.log('РАБОТАЕТ?', this.countPositiveFeedbackPercentage())\r\n    // console.log('f===>>', this.f())\r\n    const { good, neutral, bad } = this.state\r\n    // const countTotalFeedback = good + neutral + bad\r\n    console.log('TOTAL in console==>', this.countTotalFeedback())\r\n\r\n    return (\r\n      <Container>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions onLeaveFeedback={this.handleIncrement} />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        </Section>\r\n        <Notification\r\n          count={this.countTotalFeedback()}\r\n          message=\"No feedback given\"\r\n        ></Notification>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3ZPmD\"};"],"sourceRoot":""}